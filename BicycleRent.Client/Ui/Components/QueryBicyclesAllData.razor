@inject IBicycleRentApiWrapper BicycleRentApi

<Modal @ref="allBicyclesModal">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>All Bicycles</ModalTitle>
            <CloseButton Clicked="@(() => allBicyclesModal.Hide())" />
        </ModalHeader>
        <ModalBody>
            <DataGrid TItem="BicycleDto"
                      Data="@bicyclesList"
                      Responsive
                      Striped>
                <DataGridColumns>
                    <DataGridColumn TItem="BicycleDto"
                                    Field="@nameof(BicycleDto.SerialNumber)"
                                    Caption="Serial Number" />
                    <DataGridColumn TItem="BicycleDto"
                                    Field="@nameof(BicycleDto.Model)"
                                    Caption="Model" />
                    <DataGridColumn TItem="BicycleDto"
                                    Field="@nameof(BicycleDto.Color)"
                                    Caption="Color" />
                    <DataGridColumn TItem="BicycleDto"
                                    Field="@nameof(BicycleDto.TypeId)"
                                    Caption="Type" />
                </DataGridColumns>
            </DataGrid>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@(() => allBicyclesModal.Hide())">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    private Modal allBicyclesModal = new();
    private ICollection<BicycleDto> bicyclesList = [];

    public async Task Show()
    {
        await LoadData();
        await allBicyclesModal.Show();
    }

    private async Task LoadData()
    {
        bicyclesList = await BicycleRentApi.GetAllBicycles();
    }
}