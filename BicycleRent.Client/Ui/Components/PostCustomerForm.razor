@inject IBicycleRentApiWrapper BicycleRentApi

<EditForm Model="@Customer" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />  
    <div class="form-group">
        <label for="Id">ID</label>
        <InputNumber id="Id" class="form-control" @bind-Value="Customer.Id" />
    </div>
    <div class="form-group">
        <label for="FullName">Full Name</label>
        <InputText id="FullName" class="form-control" @bind-Value="Customer.FullName" />
    </div>

    <div class="form-group">
        <label for="BirthDate">Birth Date</label>
        <InputDate id="BirthDate" class="form-control" @bind-Value="Customer.BirthDate" />
    </div>

    <div class="form-group">
        <label for="PhoneNumber">Phone Number</label>
        <InputText id="PhoneNumber" class="form-control" @bind-Value="Customer.PhoneNumber" />
    </div>

    <button type="submit" class="btn btn-outline-light bg-primary mt-3" style="width: 180px;">Submit</button>
    
    @if (Message is not null)
    {
        <div class="alert alert-info mt-3">@Message</div>
    }
</EditForm>

@code {
    [Parameter] public EventCallback<CustomerDto> OnCustomerAdded { get; set; }

    private CustomerDto Customer = new()
        {
            Id = 0,
            FullName = string.Empty,
            BirthDate = DateTime.Now,
            PhoneNumber = string.Empty
        };

    private string? Message;

    private async Task HandleValidSubmit()
    {
        try
        {
            Message = null;
            var result = await BicycleRentApi.PostCustomer(Customer);
            if (result != null)
            {
                Message = $"Customer '{result.FullName}' added successfully with ID {result.Id}.";
            }
            else
            {
                Message = "Failed to add customer";
            }
            Customer = new()
                {
                    Id = 0,
                    FullName = string.Empty,
                    BirthDate = DateTime.Now,
                    PhoneNumber = string.Empty
                };
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode == 409)
            {
                Message = $"Conflict error: {ex.Message}";
            }
            else
            {
                 Message = $"{ex.Message}";
            }
        }
    }
}
