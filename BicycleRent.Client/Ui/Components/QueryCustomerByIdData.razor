@inject IBicycleRentApiWrapper BicycleRentApi

<div class="container">
    <div class="form-group">
        <label for="customerId">Customer ID</label>
        <InputNumber id="customerId" class="form-control" @bind-Value="customerId" />
    </div>

    <button class="btn btn-outline-light bg-success mt-3" style="width: 180px;" @onclick="FetchCustomer">Get Customer</button>
    
    @if (Customer != null)
    {
        <div class="mt-3">
            <h4>Customer Details</h4>
            <p><strong>ID:</strong> @Customer.Id</p>
            <p><strong>Name:</strong> @Customer.FullName</p>
            <p><strong>Birth Date:</strong> @Customer.BirthDate.ToString("d")</p>
            <p><strong>Phone Number:</strong> @Customer.PhoneNumber</p>
        </div>
    }
    else if (message != null)
    {
        <div class="alert alert-danger mt-3">
            @message
        </div>
    }
</div>

@code {
    private int customerId;
    private CustomerDto? Customer { get; set; } = new();
    private string? message;

    private async Task FetchCustomer()
    {
        try
        {
            message = null;
            Customer = await BicycleRentApi.GetCustomerById(customerId);
        }
        catch (Exception ex)
        {
            message = $"An error occurred: {ex.Message}";
        }
    }
}
